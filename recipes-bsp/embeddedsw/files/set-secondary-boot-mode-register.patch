Set secondary boot mode register

On the Zynqmp, boot can occur on a secondary device different from the primary
boot device set by the boot pins.  This is configured via the boot_device
parameter in bootgen's BIF file.  

When used, the FSBL still does not set the BOOT_MODE_USER register, and
therefore secondary SBLs (U-Boot) incorrectly report the boot device as the
original.  This patch fixes that.

In addition, the FSBL does not correctly compare the boot device reported in
the bootgen image header to the boot device reported by the BOOT_MODE_USER
register.  Both give an ordinal that corresponds to the boot device, but the
ordinals don't match up and must be translated.  

Compare:
    Zynq UltraScale+ Device TRM UG1085 (v2.1) August 21, 2019, 
        Table 11-1: Boot Modes
with:
    Bootgen User Guide UG1283 (v2019.2) October 30, 2019,
        Table 13: Zynq UltraScale+ MPSoC Device Image Header Table
            Secondary Boot Device field

Note: the latter table also has a mistake - all ordinals from "4 - SD1" and
thereafter should be incremented by one.

diff -urN old/fsbl/xfsbl_hw.h new/fsbl/xfsbl_hw.h
--- old/fsbl/xfsbl_hw.h	2020-04-03 18:14:05.232424198 -0400
+++ new/fsbl/xfsbl_hw.h	2020-04-03 18:13:19.104380428 -0400
@@ -260,6 +260,8 @@
  */
 #define CRL_APB_BOOT_MODE_USER    ( ( CRL_APB_BASEADDR ) + 0X00000200U )
 #define CRL_APB_BOOT_MODE_USER_BOOT_MODE_MASK    0X0000000FU
+#define CRL_APB_BOOT_MODE_USER_ALT_BOOT_MODE_SHIFT     12U
+#define CRL_APB_BOOT_MODE_USER_USE_ALT_SHIFT    8U
 
 /**
  * Register: CRL_APB_RESET_CTRL
diff -urN old/fsbl/xfsbl_initialization.c new/fsbl/xfsbl_initialization.c
--- old/fsbl/xfsbl_initialization.c	2020-04-03 18:14:05.232424198 -0400
+++ new/fsbl/xfsbl_initialization.c	2020-04-03 18:13:19.104380428 -0400
@@ -425,8 +425,24 @@
 	/**
 	 *  Configure the secondary boot device if required
 	 */
-	if (FsblInstancePtr->SecondaryBootDevice !=
-			FsblInstancePtr->PrimaryBootDevice) {
+    u32 XlatedSecondaryBootDevice;
+    switch (FsblInstancePtr->SecondaryBootDevice) {
+        case XIH_IHT_PPD_QSPI32:    XlatedSecondaryBootDevice = XFSBL_QSPI32_BOOT_MODE; break;
+        case XIH_IHT_PPD_QSPI24:    XlatedSecondaryBootDevice = XFSBL_QSPI24_BOOT_MODE; break;
+        case XIH_IHT_PPD_NAND:      XlatedSecondaryBootDevice = XFSBL_NAND_BOOT_MODE;   break;
+        case XIH_IHT_PPD_SD_0:      XlatedSecondaryBootDevice = XFSBL_SD0_BOOT_MODE;    break;
+        case XIH_IHT_PPD_SD_1:      XlatedSecondaryBootDevice = XFSBL_SD1_BOOT_MODE;    break;
+        case XIH_IHT_PPD_SD_LS:     XlatedSecondaryBootDevice = XFSBL_SD1_LS_BOOT_MODE; break;
+        case XIH_IHT_PPD_MMC:       XlatedSecondaryBootDevice = XFSBL_EMMC_BOOT_MODE;   break;
+        case XIH_IHT_PPD_USB:       XlatedSecondaryBootDevice = XFSBL_USB_BOOT_MODE;    break;
+        default:                    XlatedSecondaryBootDevice = -1;
+    }
+    if (XlatedSecondaryBootDevice != -1) {
+        XFsbl_Out32(CRL_APB_BOOT_MODE_USER,
+            XlatedSecondaryBootDevice << CRL_APB_BOOT_MODE_USER_ALT_BOOT_MODE_SHIFT
+                | 1 << CRL_APB_BOOT_MODE_USER_USE_ALT_SHIFT);
+    }
+	if (XlatedSecondaryBootDevice != FsblInstancePtr->PrimaryBootDevice) {
 		Status = XFsbl_SecondaryBootDeviceInit(FsblInstancePtr);
 		if (XFSBL_SUCCESS != Status) {
 			goto END;
