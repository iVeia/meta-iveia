From b79d14140ad99aac2cc25d4458faee611857108e Mon Sep 17 00:00:00 2001
From: Brian Silverman <bsilverman@iveia.com>
Date: Wed, 22 Apr 2020 21:26:54 -0400
Subject: [PATCH 3/5] zap: add driver

Driver currently requires allocating DMA memory outside of Linux management via
alloc_bootmem_pages().

Disable driver (and mem alloc) with kernel cmdline "nozap".
---
 drivers/char/Makefile |  1 +
 init/main.c           | 13 +++++++++++++
 2 files changed, 14 insertions(+)

diff --git a/drivers/char/Makefile b/drivers/char/Makefile
index 264eb398fdd4..0005e283f297 100644
--- a/drivers/char/Makefile
+++ b/drivers/char/Makefile
@@ -3,6 +3,7 @@
 # Makefile for the kernel character device drivers.
 #
 
+obj-y				+= zap/
 obj-y				+= mem.o random.o
 obj-$(CONFIG_TTY_PRINTK)	+= ttyprintk.o
 obj-y				+= misc.o
diff --git a/init/main.c b/init/main.c
index 2ef2a23ec8fe..d3481da02f13 100644
--- a/init/main.c
+++ b/init/main.c
@@ -932,6 +932,11 @@ static void __init print_unknown_bootoptions(void)
 	memblock_free_ptr(unknown_options, len);
 }
 
+extern volatile void * tx_vaddr;
+extern volatile void * rx_vaddr;
+bool nozap;
+core_param(nozap, nozap, bool, 0644);
+
 asmlinkage __visible void __init __no_sanitize_address start_kernel(void)
 {
 	char *command_line;
@@ -984,6 +989,14 @@ asmlinkage __visible void __init __no_sanitize_address start_kernel(void)
 		parse_args("Setting extra init args", extra_init_args,
 			   NULL, 0, -1, -1, NULL, set_init_arg);
 
+    if (nozap) {
+        pr_notice("zap: SKIPPING memblock_alloc()\n");
+    } else {
+        pr_notice("zap: calling memblock_alloc()\n");
+        rx_vaddr = memblock_alloc(128*1024*1024, PAGE_SIZE);
+        tx_vaddr = memblock_alloc(4*1024*1024, PAGE_SIZE);
+    }
+
 	/*
 	 * These use large bootmem allocations and must precede
 	 * kmem_cache_init()
-- 
2.25.1

